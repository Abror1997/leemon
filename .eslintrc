{
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 8,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true
    },
    "sourceType": "module",
    "allowImportExportEverywhere": false
  },
  "extends": [
    "plugin:flowtype/recommended"
  ],
  "plugins": [
    "babel",
    "flowtype",
    "jest"
  ],
  "settings": {
    "flowtype": {
      "onlyFilesWithFlowAnnotation": true
    }
  },
  "globals": {
    "__DEV__": true,
    "preval": true
  },
  "env": {
    "node"  : true,
    "browser": true,
    "worker": false,
    "es6"   : true,
    "jest": true,
    "jasmine": true
  },
  "rules": {
    "flowtype/no-weak-types": "warn",
    "flowtype/generic-spacing": "off",
    // "strict"               : "error",
    "no-console"           : "off",
    "no-cond-assign"       : "warn",

    //Controversial rules
    "no-unused-vars"       : "warn",
    "prefer-template"      : "off",
    "no-nested-ternary"    : "warn",
    "no-unneeded-ternary"  : "warn",
    "no-underscore-dangle" : "off",
    "prefer-const"         : "warn",
    "no-unused-labels"     : "off",


    //On test
    "no-extra-bind"        : "error",
    "no-case-declarations" : "error",
    "no-useless-call"      : "error",
    "prefer-arrow-callback": [
      "error",
      { "allowNamedFunctions": true }
    ],
    "object-shorthand"     : [
      "error",
      "always",
      {
        "avoidQuotes": true,
        "ignoreConstructors": true,
        "avoidExplicitReturnArrows": true
      }
    ],
    "no-extra-parens"      : "off",
    "multiline-ternary"    : "off",

    //General
    "arrow-body-style"     : ["error", "as-needed"],
    "no-var"               : "off",
    "no-duplicate-imports" : "warn",

    //Style rules. Freely varies according to projects
    "quotes"               : ["error", "single",{
      "allowTemplateLiterals": true,
      "avoidEscape": true
    }],
    "max-len"              : ["warn", {
      "code": 80,
      "tabWidth":2,
      "comments":220 //Separated max length for comments
    }],

    //Indents,whitespace settings
    "key-spacing"          : ["warn", {
      "beforeColon": false,
      "afterColon": true,
      // "on": "value",
      "mode": "minimum"
    }],
    "comma-spacing"        : ["error", {
      "before": false,
      "after": true
    }],
    "block-spacing"        : [
      "error", "always"
    ],
    "object-curly-spacing" : [2, "always"],
    "semi-spacing"         : ["error", {
      "before": false,
      "after": true
    }],
    "indent"               : [1,2,{
      "VariableDeclarator" : {
        "var"   : 2,
        "let"   : 2,
        "const" : 3
      },
      "FunctionDeclaration": {
        "parameters": "first"
      },
      "FunctionExpression": {
        "parameters": "first"
      },
      "MemberExpression": 1,
      "SwitchCase": 1,
      "CallExpression": {
        "arguments": "first"
      },
      "ArrayExpression": 1,
      "ObjectExpression": "first"
    }],
    "operator-linebreak": ["error", "after", {
      "overrides": {
        "?": "before",
        ":": "before"
      }
    }],
    "newline-per-chained-call": ["error", {
      "ignoreChainWithDepth": 2
    }],
    "keyword-spacing": ["error", { "before": true }],
    "space-unary-ops": ["error", {
      "words": true,
      "nonwords": false
    }],
    "no-whitespace-before-property": "error",
    "generator-star-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "arrow-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "space-before-function-paren": ["error", {
      "anonymous": "never",
      "named": "never",
      "asyncArrow": "always"
    }],
    "rest-spread-spacing"  : ["error", "never"],

    //Strict best practices. No reason not to use this
    "no-alert"             : "error",
    "no-bitwise"           : 0,
    "no-caller"            : "error",
    "no-global-assign"     : "error",
    "no-eval"              : "error",
    "no-implied-eval"      : "error",
    "no-proto"             : "error",
    "no-iterator"          : "error",
    "no-lone-blocks"       : "error",
    "no-self-compare"      : "error",
    "no-self-assign"       : ["error", {
      "props": true
    }],
    "no-invalid-regexp"    : ["error", {
      "allowConstructorFlags": ["u", "y"]
    }],
    "no-with"              : "error",
    "no-new-func"          : "error",
    "prefer-rest-params"   : "error",
    "prefer-spread"        : "error",
    //Unnecessary semicolon is an annoying visual clutter
    "no-extra-semi"        : "warn",
    "semi"                 : ["warn", "never"]
  }
}

// https://github.com/zerobias
